{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Aria2.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Palette","CloudDownload","Image","Storage","Group","Person","InsertDriveFile","Share","Assignment","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","alt","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","captcha_IsUseReCaptcha","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","groups","setGroups","httpAlert","setHttpAlert","checked","handleInputChange","FormControlLabel","control","Switch","Link","href","ID","toString","Name","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","unitTransform","Math","round","SizeInput","max","suffix","unit","setUnit","first","transform","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","newTheme","Aria2","aria2_rpcurl","aria2_token","aria2_temp_path","aria2_options","aria2_interval","aria2_call_timeout","server","token","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","page","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","filter","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","page_size","order_by","conditions","Boolean","TableContainer","column","row","hover","policyTypeMap","Type","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","MagicVar","isFile","isSlave","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","OptionsSerialized","file_type","setPolicy","policyID","setPolicyID","region","setRegion","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","policyCopy","parseInt","split","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","OneDriveGuide","od_proxy","od_redirect","httpsAlert","setHttpsAlert","handleOptionChange","URL","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","secret","UpyunGuide","regions","S3Guide","alertOpen","setAlertOpen","Autocomplete","freeSolo","onInputChange","_","renderOption","renderInput","params","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","compress_size","decompress_size","setGroup","handleCheckChange","handleOptionCheckChange","groupCopy","input","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","selected","setSelected","searches","block","Status","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","success","Block","UserForm","Password","GroupID","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","Date","CreatedAt","toLocaleDateString","toLocaleTimeString","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Download","downloads","setDownloads","Source","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/9.0d9b8b2d.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Assignment,\n    CloudDownload,\n    Contacts,\n    Group,\n    Home,\n    Image,\n    InsertDriveFile,\n    Language,\n    ListAlt,\n    Mail,\n    Palette,\n    Person,\n    Settings,\n    SettingsEthernet,\n    Share,\n    Storage\n} from \"@material-ui/icons\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: \"none\"\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    title: {\n        flexGrow: 1\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: lighten(theme.palette.primary.main, 0.7)\n        }\n    },\n    activeText: {\n        fontWeight: 500\n    },\n    activeIcon: {\n        color: theme.palette.primary.main\n    }\n}));\n\nconst items = [\n    {\n        title: \"面板首页\",\n        icon: <Home />,\n        path: \"home\"\n    },\n    {\n        title: \"参数设置\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"站点信息\",\n                path: \"basic\",\n                icon: <Language />\n            },\n            {\n                title: \"注册与登录\",\n                path: \"access\",\n                icon: <Contacts />\n            },\n            {\n                title: \"邮件\",\n                path: \"mail\",\n                icon: <Mail />\n            },\n            {\n                title: \"上传与下载\",\n                path: \"upload\",\n                icon: <SettingsEthernet />\n            },\n            {\n                title: \"外观\",\n                path: \"theme\",\n                icon: <Palette />\n            },\n            {\n                title: \"离线下载\",\n                path: \"aria2\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"图像处理\",\n                path: \"image\",\n                icon: <Image />\n            }\n        ]\n    },\n    {\n        title: \"存储策略\",\n        icon: <Storage />,\n        path: \"policy\"\n    },\n    {\n        title: \"用户组\",\n        icon: <Group />,\n        path: \"group\"\n    },\n    {\n        title: \"用户\",\n        icon: <Person />,\n        path: \"user\"\n    },\n    {\n        title: \"文件\",\n        icon: <InsertDriveFile />,\n        path: \"file\"\n    },\n    {\n        title: \"分享\",\n        icon: <Share />,\n        path: \"share\"\n    },\n    {\n        title: \"持久任务\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"离线下载\",\n                path: \"download\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"常规任务\",\n                path: \"task\",\n                icon: <ListAlt />\n            }\n        ]\n    }\n];\n\nexport default function Dashboard({ content }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    useEffect(() => {\n        SetSubTitle(\"仪表盘\");\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        Cloudreve 仪表盘\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map(item => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]: location.pathname.startsWith(\n                                            \"/admin/\" + item.path\n                                        )\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon\n                                        className={clsx({\n                                            [classes.activeIcon]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            )\n                                        })}\n                                    >\n                                        {item.icon}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={clsx({\n                                            [classes.activeText]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            )\n                                        })}\n                                        primary={item.title}\n                                    />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            <ExpansionPanel\n                                key={item.title}\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={item.title} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map(sub => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]: location.pathname.startsWith(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon\n                                                    className={clsx({\n                                                        [classes.activeIcon]: location.pathname.startsWith(\n                                                            \"/admin/\" + sub.path\n                                                        )\n                                                    })}\n                                                >\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={sub.title}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Description,\n    Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram\n} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    Tooltip,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\"\n    },\n    logo: {\n        width: 70\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\"\n    },\n    title: {\n        marginLeft: 16\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary\n    },\n    version: {\n        color: theme.palette.text.hint\n    },\n    links: {\n        padding: theme.spacing(3)\n    },\n    iconRight: {\n        minWidth: 0\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800]\n    }\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\"\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = () => {\n        setOpen(false);\n        API.patch(\"/admin/setting\", {\n            options: [\n                {\n                    key: \"siteURL\",\n                    value: window.location.origin\n                }\n            ]\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then(response => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k]\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (\n                    response.data.siteURL === \"\" ||\n                    response.data.siteURL !== window.location.origin\n                ) {\n                    setOpen(true);\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news\")\n            .then(response => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach(v => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"确定站点URL设置\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" &&\n                                \"您尚未设定站点URL，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                            {siteURL !== \"\" &&\n                                \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                        </Typography>\n                        <Typography>\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在\n                            参数设置 - 站点信息 中更改此设置。\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"default\">\n                        忽略\n                    </Button>\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\n                        更改\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        趋势\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={\"文件\"}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={\"用户\"}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={\"分享\"}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        总计\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary=\"注册用户\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary=\"文件总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary=\"公开分享总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary=\"私密分享总数\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            alt=\"cloudreve\"\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend}{\" \"}\n                                {version.is_pro === \"true\" && (\n                                    <Chip size=\"small\" label=\"Pro\" />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://docs.cloudreve.org/\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文档\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://forum.cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary=\"讨论社区\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://t.me/cloudreve_official\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Telegram 群组\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary=\"捐助开发者\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news &&\n                            news.map(v => (\n                                <>\n                                    <ListItem\n                                        button\n                                        alignItems=\"flex-start\"\n                                        onClick={() =>\n                                            window.open(\n                                                \"https://forum.cloudreve.org/d/\" +\n                                                    v.id\n                                            )\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                alt=\"Travis Howard\"\n                                                src={\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ].avatarUrl\n                                                }\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={v.attributes.title}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.inline\n                                                        }\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ] &&\n                                                            newsUsers[\n                                                                v.relationships\n                                                                    .startUser\n                                                                    .data.id\n                                                            ].username}{\" \"}\n                                                    </Typography>\n                                                    发表于{\" \"}\n                                                    <TimeAgo\n                                                        datetime={\n                                                            v.attributes\n                                                                .startTime\n                                                        }\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                </>\n                            ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function SiteInformation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteICPId: \"\",\n        siteScript: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        基本信息\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的主标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    副标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的副标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点描述\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点描述信息，可能会在分享页面摘要内展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点URL\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    网站备案号\n                                </InputLabel>\n                                <Input\n                                    value={options.siteICPId}\n                                    onChange={handleChange(\"siteICPId\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    工信部网站ICP备案号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    页脚代码\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    在页面底部插入的自定义HTML代码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        渐进式应用 (PWA)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    扩展名为 ico 的小图标地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    192x192 的中等图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    512x512 的大图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    展示模式\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    PWA 应用添加后的展示模式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主题色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值，影响 PWA\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    背景色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({ title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>{msg}</Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Access() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        authn_enabled: \"0\",\n        captcha_IsUseReCaptcha: \"0\",\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_ReCaptchaSecret: \"defaultSecret\"\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleInputChange = name => event => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"]\n        })\n            .then(response => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={\"提示\"}\n                msg={\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\n                }\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        注册与登录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许新用户注册\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，无法再通过前台注册新的用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"邮件激活\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"注册验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用注册表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"登录验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用登录表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"找回密码验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用找回密码表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.captcha_IsUseReCaptcha ===\n                                                \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_IsUseReCaptcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用 reCaptcha V2 验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用 reCaptcha V2 验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.captcha_IsUseReCaptcha === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={e => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label=\"Web Authn\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\n                                    HTTPS 才能使用。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认用户组\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户注册后的初始用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    buttonMargin: {\n        marginLeft: 8\n    }\n}));\n\nexport default function Mail() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption: \"\",\n        mail_keepalive: \"30\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>\n                            发送测试邮件前，请先保存已更改的邮件设置；\n                        </Typography>\n                        <Typography>\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\n                            Cloudreve 在终端输出的错误日志。\n                        </Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"收件人地址\"\n                        value={tesInput}\n                        onChange={e => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        发送\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        发信\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人名\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    邮件中展示的发件人姓名\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人邮箱\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件邮箱的地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 服务器\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址，不含端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 端口\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 用户名\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱用户名，一般与邮箱地址相同\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱密码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    回信邮箱\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用加密连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用SSL加密连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 连接有效期 (秒)\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    有效期内建立的 SMTP\n                                    连接会被新邮件发送请求复用\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        邮件模板\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    新用户激活\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    新用户注册后激活邮件的模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    重置密码\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    密码重置邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        发送测试邮件\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\n\nconst unitTransform = v => {\n    if (v < 1024) {\n        return [Math.round(v), 1];\n    }\n    if (v < 1024 * 1024) {\n        return [Math.round(v / 1024), 1024];\n    }\n    if (v < 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024)), 1024 * 1024];\n    }\n    if (v < 1024 * 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024 * 1024)), 1024 * 1024 * 1024];\n    }\n    return [\n        Math.round(v / (1024 * 1024 * 1024 * 1024)),\n        1024 * 1024 * 1024 * 1024\n    ];\n};\n\nexport default function SizeInput({\n    onChange,\n    min,\n    value,\n    required,\n    label,\n    max,\n    suffix\n}) {\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [unit, setUnit] = useState(1);\n    let first = true;\n\n    const transform = useCallback(() => {\n        const res = unitTransform(value);\n        if (first && value !== 0) {\n            setUnit(res[1]);\n            first = false;\n        }\n        return res;\n    }, [value]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                style={{ width: 200 }}\n                value={transform()[0]}\n                type={\"number\"}\n                inputProps={{ min: min, step: 1 }}\n                onChange={e => {\n                    if (e.target.value * unit < max) {\n                        onChange({\n                            target: {\n                                value: (e.target.value * unit).toString()\n                            }\n                        });\n                    } else {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"超出最大尺寸限制\",\n                            \"warning\"\n                        );\n                    }\n                }}\n                required={required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={e => {\n                                if (transform()[0] * e.target.value < max) {\n                                    onChange({\n                                        target: {\n                                            value: (\n                                                transform()[0] * e.target.value\n                                            ).toString()\n                                        }\n                                    });\n                                    setUnit(e.target.value);\n                                } else {\n                                    ToggleSnackbar(\n                                        \"top\",\n                                        \"right\",\n                                        \"超出最大尺寸限制\",\n                                        \"warning\"\n                                    );\n                                }\n                            }}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>\n                                KB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024}>\n                                MB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024}>\n                                GB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\n                                TB{suffix && suffix}\n                            </MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function UploadDownload() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer: \"1\",\n        temp_path: \"\",\n        maxEditSize: \"0\",\n        onedrive_chunk_retries: \"0\",\n        archive_timeout: \"0\",\n        download_timeout: \"0\",\n        preview_timeout: \"0\",\n        doc_preview_timeout: \"0\",\n        upload_credential_timeout: \"0\",\n        upload_session_timeout: \"0\",\n        slave_api_timeout: \"0\",\n        onedrive_monitor_timeout: \"0\",\n        share_download_session_timeout: \"0\",\n        onedrive_callback_check: \"0\",\n        reset_after_upload_failed: \"0\",\n        onedrive_source_timeout: \"0\"\n    });\n\n    const handleCheckChange = name => event => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        存储与传输\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Worker 数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列最多并行执行的任务数，保存后需要重启\n                                    Cloudreve 生效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中转并行传输\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\n                                        \"max_parallel_transfer\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列中转任务传输时，最大并行协程数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时目录\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <SizeInput\n                                    value={options.maxEditSize}\n                                    onChange={handleChange(\"maxEditSize\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"文本文件在线编辑大小\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 分片错误重试\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1\n                                    }}\n                                    value={options.onedrive_chunk_retries}\n                                    onChange={handleChange(\n                                        \"onedrive_chunk_retries\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive\n                                    存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"上传校验失败时强制重置连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        有效期 (秒)\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    打包下载\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.archive_timeout}\n                                    onChange={handleChange(\"archive_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.download_timeout}\n                                    onChange={handleChange(\"download_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    预览链接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.preview_timeout}\n                                    onChange={handleChange(\"preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览连接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.doc_preview_timeout}\n                                    onChange={handleChange(\n                                        \"doc_preview_timeout\"\n                                    )}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传凭证\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.upload_credential_timeout}\n                                    onChange={handleChange(\n                                        \"upload_credential_timeout\"\n                                    )}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.upload_session_timeout}\n                                    onChange={handleChange(\n                                        \"upload_session_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    超出后不再处理此上传的回调请求\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    从机API请求\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.slave_api_timeout}\n                                    onChange={handleChange(\"slave_api_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    分享下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={\n                                        options.share_download_session_timeout\n                                    }\n                                    onChange={handleChange(\n                                        \"share_download_session_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    设定时间内重复下载分享文件，不会被记入总下载次数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 客户端上传监控间隔\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.onedrive_monitor_timeout}\n                                    onChange={handleChange(\n                                        \"onedrive_monitor_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每间隔所设定时间，Cloudreve 会向 OneDrive\n                                    请求检查客户端上传情况已确保客户端上传可控\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 回调等待\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.onedrive_callback_check}\n                                    onChange={handleChange(\n                                        \"onedrive_callback_check\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive\n                                    客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 下载请求缓存\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        max: 3659,\n                                        step: 1\n                                    }}\n                                    value={options.onedrive_source_timeout}\n                                    onChange={handleChange(\n                                        \"onedrive_source_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 获取文件下载 URL\n                                    后可将结果缓存，减轻热门文件下载API请求频率\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\n\nconst useStyles = makeStyles(theme => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\"\n        },\n        marginTop: theme.spacing(1)\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\"\n        }\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\"\n    },\n    fab: {\n        textAlign: \"right\"\n    }\n}));\n\nexport default function CreateTheme({ open, onClose, onSubmit }) {\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\"\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\"\n            }\n        }\n    });\n\n    const subTheme = useCallback(() => {\n        return createMuiTheme(theme);\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\"\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={c => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\"\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={c => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={c => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={c => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"文字输入\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\n                    创建\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    colorContainer: {\n        display: \"flex\"\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6\n    }\n}));\n\nexport default function Theme() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme: \"\",\n        home_view_method: \"icon\",\n        share_view_method: \"list\"\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = color => {\n        if (color === options.defaultTheme) {\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\n            return;\n        }\n        if (Object.keys(theme).length <= 1) {\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\n            return;\n        }\n        const themeCopy = { ...theme };\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes: resStr\n        });\n    };\n\n    const addTheme = newTheme => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                \"主色调不能与已有配色重复\",\n                \"warning\"\n            );\n            return;\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]: newTheme\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes: resStr\n        });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).forEach(k => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        主题配色\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>关键色</TableCell>\n                                        <TableCell>色彩配置</TableCell>\n                                        <TableCell>操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map(k => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        \"格式不正确\"\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={e => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value\n                                                        });\n                                                    }}\n                                                    onBlur={e => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if (\n                                                                !(\n                                                                    \"palette\" in\n                                                                    res\n                                                                ) ||\n                                                                !(\n                                                                    \"primary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .primary\n                                                                ) ||\n                                                                !(\n                                                                    \"secondary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .secondary\n                                                                )\n                                                            ) {\n                                                                throw e;\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton\n                                                    onClick={() =>\n                                                        deleteTheme(k)\n                                                    }\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{ marginTop: 8 }}\n                                    onClick={() => setCreate(true)}\n                                >\n                                    新建配色方案\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    完整的配置项可在{\" \"}\n                                    <Link\n                                        href={\n                                            \"https://material-ui.com/zh/customization/default-theme/\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        默认主题 - Material-UI\n                                    </Link>{\" \"}\n                                    查阅。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认配色\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map(k => (\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .primary.main\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .secondary.main\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好配色时，站点默认使用的配色方案\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        界面\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    个人文件列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目录分享页列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，目录分享页面的默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme\n                onSubmit={addTheme}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Aria2() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        aria2_rpcurl: \"\",\n        aria2_token: \"\",\n        aria2_temp_path: \"\",\n        aria2_options: \"\",\n        aria2_interval: \"0\",\n        aria2_call_timeout: \"0\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const reload = () => {\n        API.get(\"/admin/reload/aria2\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const test = () => {\n        setLoading(true);\n        API.post(\"/admin/aria2/test\", {\n            server: options.aria2_rpcurl,\n            token: options.aria2_token\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"连接成功，Aria2 版本为：\" + response.data,\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Aria2\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    Cloudreve 的离线下载功能由{\" \"}\n                                    <Link\n                                        href={\"https://aria2.github.io/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        Aria2\n                                    </Link>{\" \"}\n                                    驱动。如需使用，请在同一设备上以和运行\n                                    Cloudreve 相同的用户身份启动 Aria2， 并在\n                                    Aria2 的配置文件中开启 RPC\n                                    服务。更多信息及指引请参考文档的{\" \"}\n                                    <Link\n                                        href={\n                                            \"https://docs.cloudreve.org/use/aria2\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        离线下载\n                                    </Link>{\" \"}\n                                    章节。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.aria2_rpcurl}\n                                    onChange={handleChange(\"aria2_rpcurl\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\n                                    Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC Secret\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_token}\n                                    onChange={handleChange(\"aria2_token\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    RPC 授权令牌，与 Aria2\n                                    配置文件中保持一致，未设置请留空。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时下载目录\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_temp_path}\n                                    onChange={handleChange(\"aria2_temp_path\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    离线下载临时下载目录的\n                                    <strong>绝对路径</strong>，Cloudreve\n                                    进程需要此目录的读、写、执行权限。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1\n                                    }}\n                                    required\n                                    value={options.aria2_interval}\n                                    onChange={handleChange(\"aria2_interval\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1\n                                    }}\n                                    required\n                                    value={options.aria2_call_timeout}\n                                    onChange={handleChange(\n                                        \"aria2_call_timeout\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={options.aria2_options}\n                                    onChange={handleChange(\"aria2_options\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON\n                                    编码后的格式书写，您可也可以将这些设置写在\n                                    Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    <Button\n                        style={{ marginLeft: 8 }}\n                        disabled={loading}\n                        onClick={() => test()}\n                        variant={\"outlined\"}\n                        color={\"secondary\"}\n                    >\n                        测试连接\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server: \"\",\n        avatar_path: \"\",\n        avatar_size: \"\",\n        avatar_size_l: \"\",\n        avatar_size_m: \"\",\n        avatar_size_s: \"\",\n        thumb_width: \"\",\n        thumb_height: \"\",\n        captcha_height: \"1\",\n        captcha_width: \"1\",\n        captcha_mode: \"3\",\n        captcha_CaptchaLen: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={options.avatar_size}\n                                    onChange={handleChange(\"avatar_size\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"头像文件大小限制\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        缩略图\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.captcha_width}\n                                    onChange={handleChange(\"captcha_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={options.captcha_height}\n                                    onChange={handleChange(\"captcha_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    模式\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_mode}\n                                    onChange={handleChange(\"captcha_mode\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>数字</MenuItem>\n                                    <MenuItem value={\"1\"}>字母</MenuItem>\n                                    <MenuItem value={\"2\"}>算数</MenuItem>\n                                    <MenuItem value={\"3\"}>数字+字母</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码的形式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        display: \"flex\"\n    },\n    cover: {\n        width: 100,\n        height: 60\n    },\n    card: {},\n    content: {\n        flex: \"1 0 auto\"\n    },\n    bg: {\n        backgroundColor: theme.palette.background.default,\n        padding: \"24px 24px\"\n    },\n    dialogFooter: {\n        justifyContent: \"space-between\"\n    }\n}));\n\nconst policies = [\n    {\n        name: \"本机存储\",\n        img: \"local.png\",\n        path: \"/admin/policy/add/local\"\n    },\n    {\n        name: \"从机存储\",\n        img: \"remote.png\",\n        path: \"/admin/policy/add/remote\"\n    },\n    {\n        name: \"七牛\",\n        img: \"qiniu.png\",\n        path: \"/admin/policy/add/qiniu\"\n    },\n    {\n        name: \"阿里云 OSS\",\n        img: \"oss.png\",\n        path: \"/admin/policy/add/oss\"\n    },\n    {\n        name: \"又拍云\",\n        img: \"upyun.png\",\n        path: \"/admin/policy/add/upyun\"\n    },\n    {\n        name: \"腾讯云 COS\",\n        img: \"cos.png\",\n        path: \"/admin/policy/add/cos\"\n    },\n    {\n        name: \"OneDrive\",\n        img: \"onedrive.png\",\n        path: \"/admin/policy/add/onedrive\"\n    },\n    {\n        name: \"Amazon S3\",\n        img: \"s3.png\",\n        path: \"/admin/policy/add/s3\"\n    }\n];\n\nexport default function AddPolicy({ open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map(v => (\n                        <Grid item sm={12} md={6} key={v.path}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={() => {\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\" + v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions className={classes.dialogFooter}>\n                <Button\n                    onClick={() =>\n                        window.open(\n                            \"https://docs.cloudreve.org/use/policy/compare\"\n                        )\n                    }\n                    color=\"primary\"\n                >\n                    存储策略对比\n                </Button>\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport { policyTypeMap } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Policy() {\n    const classes = useStyles();\n    // const [loading, setLoading] = useState(false);\n    // const [tab, setTab] = useState(0);\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter }\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, filter]);\n\n    const deletePolicy = id => {\n        API.delete(\"/admin/policy/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight: 8\n                        }}\n                        value={filter}\n                        onChange={e => setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={e => {\n                                                    setEditID(row.ID);\n                                                    handleClick(e);\n                                                }}\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem\n                    onClick={e => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\n                    }}\n                >\n                    专家模式编辑\n                </MenuItem>\n                <MenuItem\n                    onClick={e => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\n                    }}\n                >\n                    向导模式编辑\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({ onChange, value, required, label }) {\n    const [domain, setDomain] = useState(\"\");\n    const [protocol, setProtocol] = useState(\"https://\");\n    const [error, setError] = useState();\n\n    useState(() => {\n        value = value ? value : \"\";\n        if (value.startsWith(\"https://\")) {\n            setDomain(value.replace(\"https://\", \"\"));\n            setProtocol(\"https://\");\n        } else {\n            if (value !== \"\") {\n                setDomain(value.replace(\"http://\", \"\"));\n                setProtocol(\"http://\");\n            }\n        }\n    }, [value]);\n\n    useEffect(() => {\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\n            setError(\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\n            );\n        } else {\n            setError(\"\");\n        }\n    }, [protocol]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={e => {\n                    setDomain(e.target.value);\n                    onChange({\n                        target: {\n                            value: protocol + e.target.value\n                        }\n                    });\n                }}\n                required={required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={e => {\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target: {\n                                        value: e.target.value + domain\n                                    }\n                                });\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && (\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\n            )}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\n\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey16}\"}\n                                </TableCell>\n                                <TableCell>16位随机字符</TableCell>\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey8}\"}\n                                </TableCell>\n                                <TableCell>8位随机字符</TableCell>\n                                <TableCell>gWz78q30</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp}\"}\n                                </TableCell>\n                                <TableCell>秒级时间戳</TableCell>\n                                <TableCell>1582692933</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp_nano}\"}\n                                </TableCell>\n                                <TableCell>纳秒级时间戳</TableCell>\n                                <TableCell>1582692933231834600</TableCell>\n                            </TableRow>\n                            {!isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{uid}\"}\n                                    </TableCell>\n                                    <TableCell>用户ID</TableCell>\n                                    <TableCell>1</TableCell>\n                                </TableRow>\n                            )}\n                            {isFile && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{originname}\"}\n                                    </TableCell>\n                                    <TableCell>原始文件名</TableCell>\n                                    <TableCell>MyPico.mp4</TableCell>\n                                </TableRow>\n                            )}\n                            {!isFile && !isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{path}\"}\n                                    </TableCell>\n                                    <TableCell>用户上传路径</TableCell>\n                                    <TableCell>/我的文件/学习资料/</TableCell>\n                                </TableRow>\n                            )}\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{date}\"}\n                                </TableCell>\n                                <TableCell>日期</TableCell>\n                                <TableCell>20060102</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{datetime}\"}\n                                </TableCell>\n                                <TableCell>日期时间</TableCell>\n                                <TableCell>20060102150405</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{year}\"}\n                                </TableCell>\n                                <TableCell>年份</TableCell>\n                                <TableCell>2006</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{month}\"}\n                                </TableCell>\n                                <TableCell>月份</TableCell>\n                                <TableCell>01</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{day}\"}\n                                </TableCell>\n                                <TableCell>日</TableCell>\n                                <TableCell>02</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{hour}\"}\n                                </TableCell>\n                                <TableCell>小时</TableCell>\n                                <TableCell>15</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{minute}\"}\n                                </TableCell>\n                                <TableCell>分钟</TableCell>\n                                <TableCell>04</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{second}\"}\n                                </TableCell>\n                                <TableCell>秒</TableCell>\n                                <TableCell>05</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Select from \"@material-ui/core/Select\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\"\n        }\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"云函数回调\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"cos\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\"\n                  }\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [region, setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = policy.Server;\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const creatCallback = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region: region\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cos5\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将\n                                <code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\n                                            title:\n                                                \"空间名格式不正确, 举例：ccc-1252109809\"\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写\n                                <code>基本信息</code>栏目下 给出的{\" \"}\n                                <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\n                                    存储桶。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cam/capi\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    访问密钥\n                                </Link>\n                                页面获取\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\n                                COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContental}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    prevActiveStep => prevActiveStep + 1\n                                );\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    云函数\n                                </Link>\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。\n                                <br />\n                                <br />\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\n                                COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={e =>\n                                            setRegion(e.target.value)\n                                        }\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>\n                                            华北地区(北京)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>\n                                            西南地区(成都)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>\n                                            华南地区(广州)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\n                                            华南地区(广州Open)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>\n                                            港澳台地区(中国香港)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>\n                                            亚太南部(孟买)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>\n                                            华东地区(上海)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>\n                                            亚太东南(新加坡)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>\n                                            美国西部(硅谷)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>\n                                            北美地区(多伦多)\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    prevActiveStep => prevActiveStep + 1\n                                );\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\"\n        }\n    }\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"账号授权\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\n        props.policy && props.policy.OptionsSerialized.od_proxy\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"onedrive\",\n                  Name: \"\",\n                  BucketName: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"https://graph.microsoft.com/v1.0\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      od_redirect: \"\",\n                      od_proxy: \"\"\n                  }\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [httpsAlert, setHttpsAlert] = useState(false);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"]\n        })\n            .then(response => {\n                if (!response.data.siteURL.startsWith(\"https://\")) {\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\") {\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized: {\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\n                                \"/api/v3/callback/onedrive/auth\",\n                                response.data.siteURL\n                            ).toString()\n                        }\n                    });\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const statOAuth = () => {\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\n            .then(response => {\n                window.location.href = response.data;\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\n            policyCopy.BaseURL =\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\n        } else {\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\n        }\n\n        if (!useCDN) {\n            policyCopy.OptionsSerialized.od_proxy = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(3);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={() => setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\n                    \"您必须启用 HTTPS 才能使用 OneDrive 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} OneDrive 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>{\" \"}\n                                或者{\" \"}\n                                <Link\n                                    href={\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                并登录，登录后进入\n                                <code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\n                                <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>受支持的帐户类型</code> 选择为\n                                <code>\n                                    任何组织目录(任何 Azure AD 目录 -\n                                    多租户)中的帐户\n                                </code>\n                                ；<code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写\n                                <code>\n                                    {policy.OptionsSerialized.od_redirect}\n                                </code>\n                                ； 其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>\n                                页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>\n                                菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为\n                                <code>从不</code>\n                                。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择您的 OneDrive 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\n                                                \"https://graph.microsoft.com/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要在文件下载时替换为使用自建的反代服务器？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN.toString()}\n                                        onChange={e => {\n                                            setUseCDN(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useCDN}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <DomainInput\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                            required={useCDN}\n                                            label={\"反代服务器地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>8</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\n                                ，但是你需要点击下方按钮，并使用 OneDrive\n                                登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}></div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\"\n        }\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"oss\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      server_side_endpoint: \"\"\n                  }\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        if (!useLanEndpoint) {\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://oss.console.aliyun.com/overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择\n                                <code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的\n                                <code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写\n                                <code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的{\" \"}\n                                <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                            title:\n                                                \"格式不合法，只需输入域名部分即可\"\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                如果您的 Cloudreve\n                                部署在阿里云计算服务中，并且与 OSS\n                                处在同一可用区下，您可以额外指定使用内网\n                                EndPoint\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\n                                内网 EndPoint？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useLanEndpoint.toString()}\n                                        onChange={e => {\n                                            setUseLanEndpoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useLanEndpoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            内网 EndPoint\n                                        </InputLabel>\n                                        <Input\n                                            required={useLanEndpoint}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                            inputProps={{\n                                                pattern:\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                                title:\n                                                    \"格式不合法，只需输入域名部分即可\"\n                                            }}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://cdn.console.aliyun.com/domain/list\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\n                                    Bucket。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link\n                                    href={\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    prevActiveStep => prevActiveStep + 1\n                                );\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    // const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"qiniu\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      mimetype: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\"\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"image/*\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4, [\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !==\n                                            \"\"\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { randomStr } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\"\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\"\n        }\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"remote\",\n                  Name: \"\",\n                  Server: \"https://example.com:5212\",\n                  SecretKey: randomStr(64),\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret: policy.SecretKey\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                        从机存储策略允许你使用同样运行了 Cloudreve\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve\n                                程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength: 64\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。\n                                <br />\n                                在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                            <pre>\n                                [System]\n                                <br />\n                                Mode = slave\n                                <br />\n                                Listen = :5212\n                                <br />\n                                <br />\n                                [Slave]\n                                <br />\n                                Secret = {policy.SecretKey}\n                                <br />\n                                <br />\n                                [CORS]\n                                <br />\n                                AllowOrigins = *<br />\n                                AllowMethods = OPTIONS,GET,POST\n                                <br />\n                                AllowHeaders = *<br />\n                            </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的\n                                        <code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>\n                                        必须启动跨域配置，即<code>CORS</code>\n                                        字段的内容，\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\n                                        Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。\n                                <br />\n                                如果主站启用了\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\n                                协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={() => testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"upyun\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"false\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      token: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.upyun.com/services/create/file/\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\n                                HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\n                                <br />\n                                前往所创建云存储服务的 功能配置 面板，转到\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={\n                                                policy.IsPrivate === \"true\"\n                                            }\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AlertDialog from \"../../Dialogs/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\"\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\"\n        }\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nconst regions = {\n    \"us-east-2\": \"US East (Ohio)\",\n    \"us-east-1\": \"US East (N. Virginia)\",\n    \"us-west-1\": \"US West (N. California)\",\n    \"us-west-2\": \"US West (Oregon)\",\n    \"af-south-1\": \"Africa (Cape Town)\",\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\n    \"ca-central-1\": \"Canada (Central)\",\n    \"cn-north-1\": \"China (Beijing)\",\n    \"cn-northwest-1\": \"China (Ningxia)\",\n    \"eu-central-1\": \"Europe (Frankfurt)\",\n    \"eu-west-1\": \"Europe (Ireland)\",\n    \"eu-west-2\": \"Europe (London)\",\n    \"eu-south-1\": \"Europe (Milan)\",\n    \"eu-west-3\": \"Europe (Paris)\",\n    \"eu-north-1\": \"Europe (Stockholm)\",\n    \"me-south-1\": \"Middle East (Bahrain)\",\n    \"sa-east-1\": \"South America (São Paulo)\"\n};\n\nexport default function S3Guide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(true);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"s3\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      region: \"us-east-2\"\n                  }\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={alertOpen}\n                onClose={() => setAlertOpen(false)}\n                title={\"警告\"}\n                msg={\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 主站需要启用 CORS 支持，具体步骤如下：\n                                <br />\n                                修改 Cloudreve 配置文件，新增以下 CORS\n                                配置项，保存并重启 Cloudreve。\n                                <pre>\n                                    [CORS]\n                                    <br />\n                                    AllowOrigins = *<br />\n                                    AllowMethods = OPTIONS,GET,POST\n                                    <br />\n                                    AllowHeaders = *<br />\n                                </pre>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往 AWS S3\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\n                                <code>存储桶名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"阻止全部公共访问权限\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许公共读取\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                (可选) 指定存储桶的 EndPoint（地域节点），\n                                填写为完整的 URL 格式，比如{\" \"}\n                                <code>https://bucket.region.example.com</code>。\n                                留空则将使用系统生成的默认接入点。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择存储桶所在的区域，或者手动输入区域代码\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <Autocomplete\n                                        options={Object.keys(regions)}\n                                        freeSolo\n                                        value={policy.OptionsSerialized.region}\n                                        onInputChange={(_, value) =>\n                                            handleOptionChange(\"region\")({\n                                                target: { value: value }\n                                            })\n                                        }\n                                        renderOption={option => (\n                                            <React.Fragment>\n                                                {regions[option]}\n                                            </React.Fragment>\n                                        )}\n                                        renderInput={params => (\n                                            <TextField\n                                                style={{ width: \"100%\" }}\n                                                {...params}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用 CDN 加速访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    CDN 加速域名\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                获取访问密钥，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    prevActiveStep => prevActiveStep + 1\n                                );\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    }\n}));\n\nexport default function AddPolicyParent() {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type === \"local\" && <LocalGuide />}\n                {type === \"remote\" && <RemoteGuide />}\n                {type === \"qiniu\" && <QiniuGuide />}\n                {type === \"oss\" && <OSSGuide />}\n                {type === \"upyun\" && <UpyunGuide />}\n                {type === \"cos\" && <COSGuide />}\n                {type === \"onedrive\" && <OneDriveGuide />}\n                {type === \"s3\" && <S3Guide />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\n\nexport default function EditPro(props) {\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\n                                                \"BucketName\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    预览/获取文件外链时生成URL的前缀\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    最大可上传的文件尺寸，填写为0表示不限制\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\n                                                \"AutoRename\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否根据规则对上传物理文件重命名\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\n                                                \"DirNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\n                                                \"IsOriginLinkEnable\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_redirect\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_redirect\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 反代服务器地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Amazon S3 Region\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.region\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"region\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 Amazon S3 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    内网 EndPoint\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{ margin: 8 }}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n            </TableContainer>\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport EditPro from \"./Guid/EditPro\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    }\n}));\n\nexport default function EditPolicyPreload() {\n    const classes = useStyles();\n    const [type, setType] = useState(\"\");\n    const [policy, setPolicy] = useState({});\n\n    const { mode, id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then(response => {\n                response.data.IsOriginLinkEnable = response.data\n                    .IsOriginLinkEnable\n                    ? \"true\"\n                    : \"false\";\n                response.data.AutoRename = response.data.AutoRename\n                    ? \"true\"\n                    : \"false\";\n                response.data.MaxSize = response.data.MaxSize.toString();\n                response.data.IsPrivate = response.data.IsPrivate\n                    ? \"true\"\n                    : \"false\";\n                response.data.OptionsSerialized.file_type = response.data\n                    .OptionsSerialized.file_type\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\n                    : \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" && (\n                    <>\n                        {type === \"local\" && <LocalGuide policy={policy} />}\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\n                        {type === \"cos\" && <COSGuide policy={policy} />}\n                        {type === \"onedrive\" && (\n                            <OneDriveGuide policy={policy} />\n                        )}\n                        {type === \"s3\" && <S3Guide policy={policy} />}\n                    </>\n                )}\n\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\"\n        })\n            .then(response => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = id => {\n        API.delete(\"/admin/group/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null &&\n                                            row.PolicyList.map((pid, key) => {\n                                                let res = \"\";\n                                                if (policies[pid]) {\n                                                    res += policies[pid].Name;\n                                                }\n                                                if (\n                                                    key !==\n                                                    row.PolicyList.length - 1\n                                                ) {\n                                                    res += \" / \";\n                                                }\n                                                return res;\n                                            })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/group/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\n// function getStyles(name, personName, theme) {\n//     return {\n//         fontWeight:\n//             personName.indexOf(name) === -1\n//                 ? theme.typography.fontWeightRegular\n//                 : theme.typography.fontWeightMedium\n//     };\n// }\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: 1, // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\"\n                  }\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                const res = {};\n                response.data.items.forEach(v => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value\n        });\n    };\n\n    const handleOptionCheckChange = name => event => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value\n            }\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized }\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"aria2\"\n        ].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] =\n                    groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\"compress_size\", \"decompress_size\"].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] = parseInt(\n                    groupCopy.OptionsSerialized[v]\n                );\n            }\n        });\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\n                groupCopy.OptionsSerialized.aria2_options\n            );\n        } catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        {group.ID !== 3 && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            用户组名\n                                        </InputLabel>\n                                        <Input\n                                            value={group.Name}\n                                            onChange={handleChange(\"Name\")}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            用户组的名称\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            存储策略\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-mutiple-chip-label\"\n                                            id=\"demo-mutiple-chip\"\n                                            value={group.PolicyList}\n                                            onChange={handleChange(\n                                                \"PolicyList\"\n                                            )}\n                                            input={\n                                                <Input id=\"select-multiple-chip\" />\n                                            }\n                                        >\n                                            {Object.keys(policies).map(pid => (\n                                                <MenuItem key={pid} value={pid}>\n                                                    {policies[pid]}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText id=\"component-helper-text\">\n                                            指定用户组的存储策略。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <SizeInput\n                                            value={group.MaxStorage}\n                                            onChange={handleChange(\n                                                \"MaxStorage\"\n                                            )}\n                                            min={0}\n                                            max={9223372036854775807}\n                                            label={\"初始容量\"}\n                                            required\n                                        />\n                                    </FormControl>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组下的用户初始可用最大容量\n                                    </FormHelperText>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.ShareEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"ShareEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"允许创建分享\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法创建分享链接\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.WebDAVEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"WebDAVEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"WebDAV\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法通过 WebDAV\n                                        协议连接至网盘\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .aria2 === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"aria2\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"离线下载\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否允许用户创建离线下载任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件打包下载\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .archive_task === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"archive_task\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"压缩/解压缩 任务\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否用户创建 压缩/解压缩 任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport GroupForm from \"./GroupForm\";\n\nexport default function EditGroupPreload() {\n    const [group, setGroup] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then(response => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"aria2\"\n                ].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[v] = response.data\n                            .OptionsSerialized[v]\n                            ? \"true\"\n                            : \"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\"compress_size\", \"decompress_size\"].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[\n                            v\n                        ] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList[0];\n\n                // JSON转换\n                if (\n                    response.data.OptionsSerialized.aria2_options === undefined\n                ) {\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\n                } else {\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\n                            response.data.OptionsSerialized.aria2_options\n                        );\n                    } catch (e) {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"Aria2 设置项格式错误\",\n                            \"warning\"\n                        );\n                        return;\n                    }\n                }\n                setGroup(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        group_id: \"all\",\n        status: \"all\"\n    });\n    const [groups, setGroups] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v => {\n            if (input[v] !== \"all\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                nick: keywords,\n                email: keywords\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户组\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户状态\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={e => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 昵称 / 用户名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport UserFilter from \"../Dialogs/UserFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const block = id => {\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\" + id)\n            .then(response => {\n                setUsers(\n                    users.map(v => {\n                        if (v.ID === id) {\n                            const newUser = { ...v, Status: response.data };\n                            return newUser;\n                        }\n                        return v;\n                    })\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = users.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() => block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\" // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setUser({\n            ...user,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        const userCopy = { ...user };\n\n        // 整型转换\n        [\"Status\", \"GroupID\", \"Score\"].forEach(v => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password: userCopy.Password\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\"GroupID\")}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\"Status\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>\n                                        超额使用被封禁\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport UserForm from \"./UserForm\";\n\nexport default function EditUserPreload() {\n    const [user, setUser] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then(response => {\n                // 整型转换\n                [\"Status\", \"GroupID\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        policy_id: \"all\",\n        user_id: \"\"\n    });\n    const [policies, setPolicies] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                name: keywords\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        存储策略\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={e => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport FileFilter from \"../Dialogs/FileFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = force => () => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = files.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\"\n                    }}\n                >\n                    从外部导入\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch(false)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"强制删除\">\n                            <IconButton\n                                onClick={deleteBatch(true)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 70 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    上传于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/api/v3/admin/file/preview/\" +\n                                                row.ID\n                                            }\n                                        >\n                                            {row.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\n\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        is_dir: \"all\",\n        user_id: \"\"\n    });\n    const [keywords, setKeywords] = useState(\"\");\n\n    const handleChange = name => event => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach(v => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                source_name: keywords\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        源文件类型\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={e => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/s/\" +\n                                                ids[row.ID] +\n                                                (row.Password === \"\"\n                                                    ? \"\"\n                                                    : \"?password=\" +\n                                                      row.Password)\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 &&\n                                            row.RemainDownloads + \" 次下载后\"}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 150 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = error => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(\n                                            row.Type,\n                                            row.Progress\n                                        )}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { Dialog } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fade from \"@material-ui/core/Fade\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport PathSelector from \"../../FileManager/PathSelector\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0\n    }\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = e => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm\n                }\n            })\n                .then(response => {\n                    setUsers(response.data.items);\n                })\n                .catch(error => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                const res = {};\n                response.data.items.forEach(v => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = u => {\n        setOptions({\n            ...options,\n            userInput: \"\"\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = setter => folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path === \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = isSrcSelect => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"选择的存储策略只支持手动输入路径\",\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget(p =>\n                        setOptions({\n                            ...options,\n                            src: p\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget(p =>\n                        setOptions({\n                            ...options,\n                            dst: p\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        导入外部目录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                您可以将存储策略中已有文件、目录结构导入到\n                                Cloudreve\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    存储策略\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map(pid => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要导入文件目前存储所在的存储策略\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目标用户\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={e => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map(u => (\n                                                    <MenuItem\n                                                        key={u.Email}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    原始目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={e => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要导入的目录在存储端的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目的目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={e => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要将目录导入到用户文件系统中的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"递归导入子目录\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否将目录下的所有子目录递归导入\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        创建导入任务\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\n\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport Aria2 from \"./component/Admin/Setting/Aria2\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            background: {}\n        }\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={path => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/aria2`}>\n                                        <Aria2 />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}